[build-system]
requires = ["flit_core>=3.7"]
build-backend = "flit_core.buildapi"

# project metadata
[project]
name = "Sphinx"
description = "Python documentation generator"
readme = "README.rst"
urls.Changelog = "https://www.sphinx-doc.org/en/master/changes.html"
urls.Code = "https://github.com/sphinx-doc/sphinx"
urls.Download = "https://pypi.org/project/Sphinx/"
urls.Homepage = "https://www.sphinx-doc.org/"
urls."Issue tracker" = "https://github.com/sphinx-doc/sphinx/issues"
license.text = "BSD-2-Clause"
requires-python = ">=3.9"

# Classifiers list: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Framework :: Sphinx",
    "Framework :: Sphinx :: Domain",
    "Framework :: Sphinx :: Extension",
    "Framework :: Sphinx :: Theme",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Printing",
    "Topic :: Software Development",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: General",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: LaTeX",
    "Topic :: Utilities",
]
dependencies = [
    "sphinxcontrib-applehelp",
    "sphinxcontrib-devhelp",
    "sphinxcontrib-jsmath",
    "sphinxcontrib-htmlhelp>=2.0.0",
    "sphinxcontrib-serializinghtml>=1.1.9",
    "sphinxcontrib-qthelp",
    "Jinja2>=3.0",
    "Pygments>=2.14",
    "docutils>=0.18.1,<0.21",
    "snowballstemmer>=2.0",
    "babel>=2.9",
    "alabaster~=0.7.14",
    "imagesize>=1.3",
    "requests>=2.25.0",
    "packaging>=21.0",
    "importlib-metadata>=4.8; python_version < '3.10'",
    "colorama>=0.4.5; sys_platform == 'win32'",
]
dynamic = ["version"]

[project.optional-dependencies]
docs = [
    "sphinxcontrib-websupport",
]
lint = [
    "flake8>=3.5.0",
    "ruff==0.3.3",
    "mypy==1.9.0",
    "sphinx-lint",
    "docutils-stubs",
    "types-requests",
    "pytest>=6.0",
]
test = [
    "pytest>=6.0",
    "html5lib",
    "cython>=3.0",
    "setuptools>=67.0",  # for Cython compilation
    "filelock",
]

[[project.authors]]
name = "Georg Brandl"
email = "georg@python.org"

[project.scripts]
sphinx-build = "sphinx.cmd.build:main"
sphinx-quickstart = "sphinx.cmd.quickstart:main"
sphinx-apidoc = "sphinx.ext.apidoc:main"
sphinx-autogen = "sphinx.ext.autosummary.generate:main"

[tool.flit.module]
name = "sphinx"

[tool.flit.sdist]
include = [
    "LICENSE.rst",
    "AUTHORS.rst",
    "CHANGES.rst",
    # Documentation
    "doc/",
    "CODE_OF_CONDUCT.rst",  # used as an include in the Documentation
    "EXAMPLES.rst",  # used as an include in the Documentation
    # Tests
    "tests/",
    "tox.ini",
    # Utilities
    "utils/",
    "babel.cfg",
]
exclude = [
    "doc/_build",
]

[tool.mypy]
files = ["sphinx", "utils"]
check_untyped_defs = true
disallow_incomplete_defs = true
python_version = "3.9"
show_column_numbers = true
show_error_context = true
strict_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_any_generics = true
extra_checks = true
enable_error_code = [
    "type-arg",
    "redundant-self",
    "truthy-iterable",
    "ignore-without-code",
    "unused-awaitable",
]
disable_error_code = [
    "import-untyped",
]

[[tool.mypy.overrides]]
module = [
    "sphinx.domains.c",
    "sphinx.domains.c._ast",
    "sphinx.domains.c._parser",
    "sphinx.domains.c._symbol",
    "sphinx.domains.cpp",
    "sphinx.domains.cpp._ast",
    "sphinx.domains.cpp._parser",
    "sphinx.domains.cpp._symbol",
]
strict_optional = false

[[tool.mypy.overrides]]
module = [
    "sphinx.application",
    "sphinx.builders._epub_base",
    "sphinx.builders.html",
    "sphinx.builders.linkcheck",
    "sphinx.cmd.quickstart",
    "sphinx.config",
    "sphinx.domains",
    "sphinx.domains.c",
    "sphinx.domains.cpp",
    "sphinx.environment",
    "sphinx.environment.adapters.indexentries",
    "sphinx.environment.collectors.toctree",
    "sphinx.events",
    "sphinx.ext.autodoc",
    "sphinx.ext.autodoc.directive",
    "sphinx.ext.autodoc.importer",
    "sphinx.ext.autodoc.mock",
    "sphinx.ext.autodoc.mock",
    "sphinx.ext.autosummary.generate",
    "sphinx.ext.doctest",
    "sphinx.ext.graphviz",
    "sphinx.ext.inheritance_diagram",
    "sphinx.ext.intersphinx",
    "sphinx.ext.napoleon.docstring",
    "sphinx.highlighting",
    "sphinx.jinja2glue",
    "sphinx.registry",
    "sphinx.search",
    "sphinx.testing.fixtures",
    "sphinx.testing.path",
    "sphinx.testing.util",
    "sphinx.util",
    "sphinx.util.display",
    "sphinx.util.docfields",
    "sphinx.util.docutils",
    "sphinx.util.i18n",
    "sphinx.util.inspect",
    "sphinx.util.logging",
    "sphinx.util.parallel",
    "sphinx.util.template",
]
disallow_any_generics = false

[tool.pytest.ini_options]
minversion = 6.0
addopts = [
    "-ra",
    "--import-mode=prepend",
#    "--pythonwarnings=error",
    "--strict-config",
    "--strict-markers",
]
empty_parameter_set_mark = "xfail"
filterwarnings = [
    "all",
    "ignore::DeprecationWarning:docutils.io",
    "ignore:Distutils was imported before Setuptools:UserWarning:_distutils_hack",
    "ignore:Setuptools is replacing distutils:UserWarning:_distutils_hack",
    "ignore::DeprecationWarning:pyximport.pyximport",
    "ignore::ImportWarning:importlib._bootstrap",
]
log_cli_level = "INFO"
markers = [
    "apidoc",
]
testpaths = ["tests"]
xfail_strict = true

[tool.coverage.run]
branch = true
parallel = true
source = ['sphinx']

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',
    # Don't complain if tests don't hit defensive assertion code:
    'raise NotImplementedError',
    # Don't complain if non-runnable code isn't run:
    'if __name__ == .__main__.:',
]
ignore_errors = true
